<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Login - ScreenHub</title>
  <style>
    body {
      margin: 0;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      display: flex;
      flex-direction: row;
      height: 100vh;
      background-color: #2a2a2a;
    }

    /* --- Panel Derecho (Carrusel) --- */
    .right-panel {
      position: relative;
      width: 50%;
      height: 100vh;
      overflow: hidden;
      background-color: #2a2a2a;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 40px; /* Padding para el reborde */
      box-sizing: border-box;
    }

    .carousel-container {
      position: relative;
      width: 100%;
      height: 100%;
      border-radius: 20px; /* Bordes redondeados */
      overflow: hidden;
      box-shadow: 0 10px 40px rgba(0, 0, 0, 0.5); /* Sombra para profundidad */
    }

    .carousel-slide {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-size: contain;
      background-position: center;
      background-repeat: no-repeat;
      background-color: #2a2a2a;
      opacity: 0;
      transition: opacity 1.5s ease-in-out;
    }

    .carousel-slide.active {
      opacity: 1;
    }

    .carousel-overlay {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      background: transparent;
      padding: 30px;
      color: white;
      border-radius: 0 0 20px 20px;
    }

    .carousel-title {
      font-size: 1.5rem;
      font-weight: 700;
      color: #FFC107;
      margin: 0;
      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);
    }

    .carousel-loading {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 100%;
      height: 100%;
      color: #FFC107;
      font-size: 1.2rem;
    }

    /* --- Panel Izquierdo (Formulario) --- */
    .left-panel {
      display: flex;
      width: 50%;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      background-color: #2a2a2a;
      height: 100vh;
      padding: 40px;
      box-sizing: border-box;
    }

    .login-container {
      width: 100%;
      max-width: 400px;
    }

    .login-container h1 {
      font-size: 3rem;
      font-weight: 700;
      color: #FFC107;
      text-align: center;
      margin-bottom: 25px;
      border-bottom: 4px solid #FFC107;
      padding-bottom: 10px;
      display: inline-block;
    }

    .header-container {
      text-align: center;
      width: 100%;
      margin-bottom: 20px;
    }

    .login-container form {
      display: flex;
      flex-direction: column;
      width: 100%;
      gap: 20px;
    }

    .form-group {
      display: flex;
      flex-direction: column;
      gap: 8px;
    }

    .form-group label {
      font-weight: 600;
      color: #ffffff;
    }

    .form-group input {
      font-size: 1rem;
      padding: 12px 15px;
      border: 1px solid #555;
      border-radius: 8px;
      background-color: #3a3a3a;
      color: #ffffff;
      transition: border-color 0.3s, box-shadow 0.3s;
    }

    .form-group input::placeholder {
      color: #999;
    }

    .form-group input:focus {
      outline: none;
      border-color: #FFC107;
      box-shadow: 0 0 8px rgba(255, 193, 7, 0.4);
    }

    button[type="submit"] {
      background-color: #FFC107;
      color: #1a1a1a;
      font-weight: bold;
      font-size: 1.1rem;
      border: none;
      padding: 14px;
      border-radius: 8px;
      cursor: pointer;
      transition: background-color 0.3s, transform 0.1s;
      margin-top: 10px;
    }

    button[type="submit"]:hover {
      background-color: #FFD54F;
    }

    button[type="submit"]:active {
      transform: scale(0.98);
    }
    
    .links {
      display: flex;
      justify-content: space-between;
      width: 100%;
      margin-top: -10px;
      font-size: 0.9rem;
    }

    .links a {
      color: #FFC107;
      text-decoration: none;
    }

    .links a:hover {
      text-decoration: underline;
      color: #FFD54F;
    }

    .signup-link {
      margin-top: 25px;
      text-align: center;
      color: #cccccc;
    }

    .signup-link a {
      color: #FFC107;
      font-weight: 600;
      text-decoration: none;
    }

    .signup-link a:hover {
      text-decoration: underline;
      color: #FFD54F;
    }

    .invalid, .message {
      display: none;
      color: #ff4444;
      text-align: center;
      margin-bottom: -10px;
    }

    @media (max-width: 768px) {
      body {
        flex-direction: column;
      }
      
      .right-panel {
        display: none;
      }

      .left-panel {
        width: 100%;
        height: 100vh;
        justify-content: start;
        padding-top: 60px;
      }

      .login-container {
        max-width: 100%;
        padding: 0 20px;
        box-sizing: border-box;
      }
    }
</style>

  <script>
    window.addEventListener("DOMContentLoaded", (event) => {
      // Aquí puedes agregar cualquier script necesario para la página de login
      const loginForm = document.querySelector("form");
      const inputs = loginForm.querySelectorAll("input");
      const invalid = document.querySelector("#invalid");

      inputs.forEach(input => {
        input.addEventListener("click", () => {
          invalid.style.display = "none"
          inputs.forEach(input => input.style.borderColor = "#ccc"); // reset border color
        });
      })

      loginForm.addEventListener("submit", (event) => {
        // hago el post 
        event.preventDefault(); // Evita el envío tradicional del formulario
        const formData = new FormData(loginForm);
        const username = formData.get("username");
        const password = formData.get("password");

        (async () => {
          try {
            const response = await fetch('/login', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              credentials: 'include',
              body: JSON.stringify({ username, password })
            });

            const data = await response.json().catch(() => ({}));
            if (response.ok) {
              // prefer not to store tokens in localStorage; store only minimal public user info if needed
              window.localStorage.setItem('user', JSON.stringify(data.user || {}));
              window.location = '/';
            } else {
              inputs.forEach(i => i.style.borderColor = 'red');
              invalid.style.display = 'block';
            }
          } catch (error) {
            console.error('Error al realizar la solicitud:', error);
          }
        })();
      });

    });
    // Try to refresh access token on page load (if refresh cookie exists)
    (async function tryRefreshOnLoad() {
      try {
        const resp = await fetch('/auth/refresh', { method: 'POST', credentials: 'include' });
        if (resp.ok) {
          console.log('Access token refreshed on load');
        }
      } catch (e) {
        // no-op
      }
    })();
  </script>
</head>
<body>

  <div class="left-panel">
    <div class="login-container">
      
      <div class="header-container">
          <h1>Login</h1>
      </div>

      <form action="/login" method="POST">
        <div class="form-group">
          <label for="username">Usuario/Email</label>
          <input type="text" placeholder="Ingresa tu usuario" id="username" name="username" required>
        </div>
        
        <div class="form-group">
          <label for="password">Contraseña</label>
          <input type="password" id="password" placeholder="Ingresa tu contraseña" name="password" required>
        </div>
        
        <div class="links">
          <span></span> <a href="#">¿Olvidaste tu contraseña?</a>
        </div>
        
        <span id="invalid" class="invalid">El usuario o contraseña son invalidos.</span>
        <button type="submit">Iniciar Sesión</button>
      
      </form>

      <p class="signup-link">
        ¿No tienes una cuenta? <a href="/register">Regístrate</a>
      </p>

    </div>
  </div>

  <div class="right-panel">
    <div class="carousel-container">
      <div class="carousel-loading">Cargando películas...</div>
    </div>
</div>

<script>
  // Carrusel de películas
  (async function initCarousel() {
    try {
      const response = await fetch('/api/popular-movies');
      const movies = await response.json();
      
      const container = document.querySelector('.carousel-container');
      container.innerHTML = '';
      
      movies.forEach((movie, index) => {
        const slide = document.createElement('div');
        slide.className = 'carousel-slide' + (index === 0 ? ' active' : '');
        slide.style.backgroundImage = `url('${movie.poster_url}')`;
        
        const overlay = document.createElement('div');
        overlay.className = 'carousel-overlay';
        overlay.innerHTML = `<h3 class="carousel-title">${movie.title}</h3>`;
        
        slide.appendChild(overlay);
        container.appendChild(slide);
      });
      
      // Cambiar slide cada 4 segundos
      let currentSlide = 0;
      const slides = document.querySelectorAll('.carousel-slide');
      
      setInterval(() => {
        slides[currentSlide].classList.remove('active');
        currentSlide = (currentSlide + 1) % slides.length;
        slides[currentSlide].classList.add('active');
      }, 4000);
      
    } catch (error) {
      console.error('Error cargando carrusel:', error);
    }
  })();
</script>

</body>
</html>
